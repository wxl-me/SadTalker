# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: xiaoyuan_tts/v1/xiaoyuan_tts_v1_api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='xiaoyuan_tts/v1/xiaoyuan_tts_v1_api.proto',
  package='brain.nlp.api.xiaoyuanTTS.v1',
  syntax='proto3',
  serialized_options=_b('Z9git.aimall-tech.com/product/brain/nlp/api/xiaoyuan_tts/v1'),
  serialized_pb=_b('\n)xiaoyuan_tts/v1/xiaoyuan_tts_v1_api.proto\x12\x1c\x62rain.nlp.api.xiaoyuanTTS.v1\"U\n\x07\x45xecReq\x12\x17\n\x0f\x63onversation_id\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x12\x0c\n\x04text\x18\x03 \x01(\t\x12\x12\n\nspeaker_id\x18\x04 \x01(\x05\"F\n\x08\x45xecResp\x12\x17\n\x0f\x63onversation_id\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x12\x10\n\x08wav_data\x18\x03 \x01(\x0c\x32^\n\x03\x41PI\x12W\n\x04\x45xec\x12%.brain.nlp.api.xiaoyuanTTS.v1.ExecReq\x1a&.brain.nlp.api.xiaoyuanTTS.v1.ExecResp\"\x00\x42;Z9git.aimall-tech.com/product/brain/nlp/api/xiaoyuan_tts/v1b\x06proto3')
)




_EXECREQ = _descriptor.Descriptor(
  name='ExecReq',
  full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conversation_id', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecReq.conversation_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecReq.user_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecReq.text', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='speaker_id', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecReq.speaker_id', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=160,
)


_EXECRESP = _descriptor.Descriptor(
  name='ExecResp',
  full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conversation_id', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecResp.conversation_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecResp.user_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wav_data', full_name='brain.nlp.api.xiaoyuanTTS.v1.ExecResp.wav_data', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=162,
  serialized_end=232,
)

DESCRIPTOR.message_types_by_name['ExecReq'] = _EXECREQ
DESCRIPTOR.message_types_by_name['ExecResp'] = _EXECRESP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ExecReq = _reflection.GeneratedProtocolMessageType('ExecReq', (_message.Message,), {
  'DESCRIPTOR' : _EXECREQ,
  '__module__' : 'xiaoyuan_tts.v1.xiaoyuan_tts_v1_api_pb2'
  # @@protoc_insertion_point(class_scope:brain.nlp.api.xiaoyuanTTS.v1.ExecReq)
  })
_sym_db.RegisterMessage(ExecReq)

ExecResp = _reflection.GeneratedProtocolMessageType('ExecResp', (_message.Message,), {
  'DESCRIPTOR' : _EXECRESP,
  '__module__' : 'xiaoyuan_tts.v1.xiaoyuan_tts_v1_api_pb2'
  # @@protoc_insertion_point(class_scope:brain.nlp.api.xiaoyuanTTS.v1.ExecResp)
  })
_sym_db.RegisterMessage(ExecResp)


DESCRIPTOR._options = None

_API = _descriptor.ServiceDescriptor(
  name='API',
  full_name='brain.nlp.api.xiaoyuanTTS.v1.API',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=234,
  serialized_end=328,
  methods=[
  _descriptor.MethodDescriptor(
    name='Exec',
    full_name='brain.nlp.api.xiaoyuanTTS.v1.API.Exec',
    index=0,
    containing_service=None,
    input_type=_EXECREQ,
    output_type=_EXECRESP,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_API)

DESCRIPTOR.services_by_name['API'] = _API

# @@protoc_insertion_point(module_scope)
